/*
 * Generated by TelosysTools with the custom VEOLIA template
 */
package com.veolia.nextcanope.model;

import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.Date;
import jakarta.persistence.*;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;


/**
 * JPA entity class for "FormTemplateCustom"
 *
 * @author VEOLIA
 *
 */
@Entity
@Table(name="form_template_custom", schema="nomad" )
@JsonIgnoreProperties(ignoreUnknown = true)
public class FormTemplateCustom implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY ---\\
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="id", nullable=false)
    private Long id;

    //--- ENTITY DATA FIELDS ---\\
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="ftc_dcre")
    @CreationTimestamp
    @JsonProperty("ftc_dcre")
    private Date ftcDcre;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="ftc_dmod")
    @UpdateTimestamp
    @JsonProperty("ftc_dmod")
    private Date ftcDmod;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="ftc_ddel")
    @JsonProperty("ftc_ddel")
    private Date deletedAt;


    //--- ENTITY LINKS ( RELATIONSHIP ) ---\\
    @ManyToOne
    @JoinColumn(name="fte_id", referencedColumnName="id")
    private FormTemplate formTemplate;

    @ManyToOne
    @JoinColumn(name="ftc_umod_id", referencedColumnName="id")
	@JsonIgnore
    private Users modifiedBy;

    @ManyToOne
    @JoinColumn(name="ftc_ucre_id", referencedColumnName="id")
	@JsonIgnore
    private Users createdBy;

    @ManyToOne
    @JoinColumn(name="fdn_id", referencedColumnName="id")
    private FormDefinition formDefinition;

    @ManyToOne
    @JoinColumn(name="usr_id", referencedColumnName="id")
    private Users user;

    /**
     * Constructor
     */
    public FormTemplateCustom() {
		super();
    }
    
    //--- GETTERS & SETTERS FOR FIELDS ---\\
    public Long getId() {
        return this.id;
    }

    public void setId( Long id ) {
        this.id = id ;
    }

    public Date getFtcDcre() {
        return this.ftcDcre;
    }

	public void setFtcDcre( Date ftcDcre ) {
        this.ftcDcre = ftcDcre ;
    }

    public Date getFtcDmod() {
        return this.ftcDmod;
    }

	public void setFtcDmod( Date ftcDmod ) {
        this.ftcDmod = ftcDmod ;
    }

    public Date getDeletedAt() {
        return deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    public void markAsDeleted(Users user) {
        this.deletedAt = new Date();
        this.modifiedBy = user;
    }

    //--- GETTERS AND SETTERS FOR LINKS ---\\
    public FormTemplate getFormTemplate() {
        return this.formTemplate;
    }

    public void setFormTemplate(FormTemplate formTemplate) {
        this.formTemplate = formTemplate;
    }

    public Users getModifiedBy() {
        return this.modifiedBy;
    }

    public void setModifiedBy(Users modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    public Users getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(Users createdBy) {
        this.createdBy = createdBy;
    }

    public FormDefinition getFormDefinition() {
        return this.formDefinition;
    }

    public void setFormDefinition(FormDefinition formDefinition) {
        this.formDefinition = formDefinition;
    }

    public Users getUser() {
        return this.user;
    }

    public void setUser(Users user) {
        this.user = user;
    }

}
