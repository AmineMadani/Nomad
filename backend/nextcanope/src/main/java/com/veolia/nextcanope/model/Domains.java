/*
 * Generated by TelosysTools with the custom VEOLIA template
 */
package com.veolia.nextcanope.model;

import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.Date;
import java.util.List;
import jakarta.persistence.*;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;


/**
 * JPA entity class for "Domains"
 *
 * @author VEOLIA
 *
 */
@Entity
@Table(name="domains", schema="nomad" )
@JsonIgnoreProperties(ignoreUnknown = true)
public class Domains implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY ---\\
        @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="id", nullable=false)
private Long id;

    //--- ENTITY DATA FIELDS ---\\
    @Column(name="dom_type", nullable=false, length=2147483647)
    @JsonProperty("dom_type")
    private String domType;

    @Column(name="dom_slabel", length=2147483647)
    @JsonProperty("dom_slabel")
    private String domSlabel;

    @Column(name="dom_llabel", length=2147483647)
    @JsonProperty("dom_llabel")
    private String domLlabel;

    @Column(name="dom_valid")
    @JsonProperty("dom_valid")
    private Boolean domValid;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dom_dcre")
    @CreationTimestamp
    @JsonProperty("dom_dcre")
    private Date domDcre;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dom_dmod")
    @UpdateTimestamp
    @JsonProperty("dom_dmod")
    private Date domDmod;


    //--- ENTITY LINKS ( RELATIONSHIP ) ---\\
    @OneToMany(mappedBy="domains")
    @Fetch(value = FetchMode.SUBSELECT)
    private List<AssetType> listOfAssetType;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="dom_umod_id", referencedColumnName="id")
	@JsonIgnore
    private Users modifiedBy;

    @OneToMany(mappedBy="domains")
    @Fetch(value = FetchMode.SUBSELECT)
    private List<Domains> listOfDomains;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="dom_ucre_id", referencedColumnName="id")
	@JsonIgnore
    private Users createdBy;

    @OneToMany(mappedBy="domains")
    @Fetch(value = FetchMode.SUBSELECT)
    private List<Layer> listOfLayer;

    @ManyToOne
    @JoinColumn(name="dom_parent_id", referencedColumnName="id")
    private Domains domains;

    /**
     * Constructor
     */
    public Domains() {
		super();
    }
    
    //--- GETTERS & SETTERS FOR FIELDS ---\\
    public Long getId() {
        return this.id;
    }

    public void setId( Long id ) {
        this.id = id ;
    }

    public String getDomType() {
        return this.domType;
    }

	public void setDomType( String domType ) {
        this.domType = domType ;
    }

    public String getDomSlabel() {
        return this.domSlabel;
    }

	public void setDomSlabel( String domSlabel ) {
        this.domSlabel = domSlabel ;
    }

    public String getDomLlabel() {
        return this.domLlabel;
    }

	public void setDomLlabel( String domLlabel ) {
        this.domLlabel = domLlabel ;
    }

    public Boolean getDomValid() {
        return this.domValid;
    }

	public void setDomValid( Boolean domValid ) {
        this.domValid = domValid ;
    }

    public Date getDomDcre() {
        return this.domDcre;
    }

	public void setDomDcre( Date domDcre ) {
        this.domDcre = domDcre ;
    }

    public Date getDomDmod() {
        return this.domDmod;
    }

	public void setDomDmod( Date domDmod ) {
        this.domDmod = domDmod ;
    }

    //--- GETTERS AND SETTERS FOR LINKS ---\\
    public List<AssetType> getListOfAssetType() {
        return this.listOfAssetType;
    }

    public void setListOfAssetType(List<AssetType> listOfAssetType) {
        this.listOfAssetType = listOfAssetType;
    }

    public Users getModifiedBy() {
        return this.modifiedBy;
    }

    public void setModifiedBy(Users modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    public List<Domains> getListOfDomains() {
        return this.listOfDomains;
    }

    public void setListOfDomains(List<Domains> listOfDomains) {
        this.listOfDomains = listOfDomains;
    }

    public Users getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(Users createdBy) {
        this.createdBy = createdBy;
    }

    public List<Layer> getListOfLayer() {
        return this.listOfLayer;
    }

    public void setListOfLayer(List<Layer> listOfLayer) {
        this.listOfLayer = listOfLayer;
    }

    public Domains getDomains() {
        return this.domains;
    }

    public void setDomains(Domains domains) {
        this.domains = domains;
    }

}
