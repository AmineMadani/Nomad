/*
 * Generated by TelosysTools with the custom VEOLIA template
 */
package com.veolia.nextcanope.model;

import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.Date;
import java.util.List;
import jakarta.persistence.*;
import java.util.stream.Collectors;
import java.util.ArrayList;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;


/**
 * JPA entity class for "Asset"
 *
 * @author VEOLIA
 *
 */
@Entity
@Table(name="asset", schema="nomad" )
@JsonIgnoreProperties(ignoreUnknown = true)
public class Asset implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY ---\\
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="id", nullable=false)
    private Long id;

    //--- ENTITY DATA FIELDS ---\\
    @Column(name="ass_obj_ref", length=2147483647)
    @JsonProperty("ass_obj_ref")
    private String assObjRef;

    @Column(name="ass_valid")
    @JsonProperty("ass_valid")
    private Boolean assValid;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="ass_dcre")
    @CreationTimestamp
    @JsonProperty("ass_dcre")
    private Date assDcre;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="ass_dmod")
    @UpdateTimestamp
    @JsonProperty("ass_dmod")
    private Date assDmod;


    //--- ENTITY LINKS ( RELATIONSHIP ) ---\\
    @OneToMany(mappedBy="asset")
    private List<Task> listOfTask;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="ass_umod_id", referencedColumnName="id")
	@JsonIgnore
    private Users modifiedBy;

    @ManyToOne
    @JoinColumn(name="ass_obj_table", referencedColumnName="lyr_table_name")
    private Layer layer;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="ass_ucre_id", referencedColumnName="id")
	@JsonIgnore
    private Users createdBy;

    /**
     * Constructor
     */
    public Asset() {
		super();
    }
    
    //--- GETTERS & SETTERS FOR FIELDS ---\\
    public Long getId() {
        return this.id;
    }

    public void setId( Long id ) {
        this.id = id ;
    }

    public String getAssObjRef() {
        return this.assObjRef;
    }

	public void setAssObjRef( String assObjRef ) {
        this.assObjRef = assObjRef ;
    }

    public Boolean getAssValid() {
        return this.assValid;
    }

	public void setAssValid( Boolean assValid ) {
        this.assValid = assValid ;
    }

    public Date getAssDcre() {
        return this.assDcre;
    }

	public void setAssDcre( Date assDcre ) {
        this.assDcre = assDcre ;
    }

    public Date getAssDmod() {
        return this.assDmod;
    }

	public void setAssDmod( Date assDmod ) {
        this.assDmod = assDmod ;
    }

    //--- GETTERS AND SETTERS FOR LINKS ---\\
    public List<Task> getListOfTask() {
        if (this.listOfTask != null) {
            return this.listOfTask.stream()
                .filter(e -> e.getDeletedAt() == null)
                .collect(Collectors.toList());
        } else {
            return new ArrayList<>();
        }
    }

    public List<Task> getListOfTaskWithDeleted() {
        return this.listOfTask;
    }

    public void setListOfTask(List<Task> listOfTask) {
        this.listOfTask = listOfTask;
    }

    public Users getModifiedBy() {
        return this.modifiedBy;
    }

    public void setModifiedBy(Users modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    public Layer getLayer() {
        return this.layer;
    }

    public void setLayer(Layer layer) {
        this.layer = layer;
    }

    public Users getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(Users createdBy) {
        this.createdBy = createdBy;
    }

}
