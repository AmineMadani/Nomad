/*
 * Generated by TelosysTools with the custom VEOLIA template
 */
package com.veolia.nextcanope.model;

import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.Date;
import java.util.List;
import jakarta.persistence.*;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;


/**
 * JPA entity class for "OrganizationalUnit"
 *
 * @author VEOLIA
 *
 */
@Entity
@Table(name="organizational_unit", schema="nomad" )
@JsonIgnoreProperties(ignoreUnknown = true)
public class OrganizationalUnit implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY ---\\
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="id", nullable=false)
    private Long id;

    //--- ENTITY DATA FIELDS ---\\
    @Column(name="org_code", nullable=false, length=2147483647)
    @JsonProperty("org_code")
    private String orgCode;

    @Column(name="org_slabel", nullable=false, length=2147483647)
    @JsonProperty("org_slabel")
    private String orgSlabel;

    @Column(name="org_llabel", length=2147483647)
    @JsonProperty("org_llabel")
    private String orgLlabel;

    @Column(name="org_valid")
    @JsonProperty("org_valid")
    private Boolean orgValid;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="org_dcre")
    @CreationTimestamp
    @JsonProperty("org_dcre")
    private Date orgDcre;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="org_dmod")
    @UpdateTimestamp
    @JsonProperty("org_dmod")
    private Date orgDmod;


    //--- ENTITY LINKS ( RELATIONSHIP ) ---\\
    @OneToMany(mappedBy="organizationalUnit")
    private List<OrgCtr> listOfOrgCtr;

    @OneToMany(mappedBy="organizationalUnitDefault")
    private List<Users> listOfUsers;

    @OneToMany(mappedBy="organizationalUnitParent")
    private List<OrganizationalUnit> listOfOrganizationalUnitChildren;

    @ManyToOne
    @JoinColumn(name="org_umod_id", referencedColumnName="id")
	@JsonIgnore
    private Users modifiedBy;

    @ManyToOne
    @JoinColumn(name="org_ucre_id", referencedColumnName="id")
	@JsonIgnore
    private Users createdBy;

    @ManyToOne
    @JoinColumn(name="out_id", referencedColumnName="id")
    private OrganizationalUnitType organizationalUnitType;

    @ManyToOne
    @JoinColumn(name="org_parent_id", referencedColumnName="id")
    private OrganizationalUnit organizationalUnitParent;

    /**
     * Constructor
     */
    public OrganizationalUnit() {
		super();
    }
    
    //--- GETTERS & SETTERS FOR FIELDS ---\\
    public Long getId() {
        return this.id;
    }

    public void setId( Long id ) {
        this.id = id ;
    }

    public String getOrgCode() {
        return this.orgCode;
    }

	public void setOrgCode( String orgCode ) {
        this.orgCode = orgCode ;
    }

    public String getOrgSlabel() {
        return this.orgSlabel;
    }

	public void setOrgSlabel( String orgSlabel ) {
        this.orgSlabel = orgSlabel ;
    }

    public String getOrgLlabel() {
        return this.orgLlabel;
    }

	public void setOrgLlabel( String orgLlabel ) {
        this.orgLlabel = orgLlabel ;
    }

    public Boolean getOrgValid() {
        return this.orgValid;
    }

	public void setOrgValid( Boolean orgValid ) {
        this.orgValid = orgValid ;
    }

    public Date getOrgDcre() {
        return this.orgDcre;
    }

	public void setOrgDcre( Date orgDcre ) {
        this.orgDcre = orgDcre ;
    }

    public Date getOrgDmod() {
        return this.orgDmod;
    }

	public void setOrgDmod( Date orgDmod ) {
        this.orgDmod = orgDmod ;
    }

    //--- GETTERS AND SETTERS FOR LINKS ---\\
    public List<OrgCtr> getListOfOrgCtr() {
        return this.listOfOrgCtr;
    }

    public void setListOfOrgCtr(List<OrgCtr> listOfOrgCtr) {
        this.listOfOrgCtr = listOfOrgCtr;
    }

    public List<Users> getListOfUsers() {
        return this.listOfUsers;
    }

    public void setListOfUsers(List<Users> listOfUsers) {
        this.listOfUsers = listOfUsers;
    }

    public List<OrganizationalUnit> getListOfOrganizationalUnitChildren() {
        return this.listOfOrganizationalUnitChildren;
    }

    public void setListOfOrganizationalUnitChildren(List<OrganizationalUnit> listOfOrganizationalUnitChildren) {
        this.listOfOrganizationalUnitChildren = listOfOrganizationalUnitChildren;
    }

    public Users getModifiedBy() {
        return this.modifiedBy;
    }

    public void setModifiedBy(Users modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    public Users getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(Users createdBy) {
        this.createdBy = createdBy;
    }

    public OrganizationalUnitType getOrganizationalUnitType() {
        return this.organizationalUnitType;
    }

    public void setOrganizationalUnitType(OrganizationalUnitType organizationalUnitType) {
        this.organizationalUnitType = organizationalUnitType;
    }

    public OrganizationalUnit getOrganizationalUnitParent() {
        return this.organizationalUnitParent;
    }

    public void setOrganizationalUnitParent(OrganizationalUnit organizationalUnitParent) {
        this.organizationalUnitParent = organizationalUnitParent;
    }

}
