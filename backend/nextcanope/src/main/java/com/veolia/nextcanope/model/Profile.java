/*
 * Generated by TelosysTools with the custom VEOLIA template
 */
package com.veolia.nextcanope.model;

import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.Date;
import java.util.List;
import jakarta.persistence.*;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.stream.Collectors;
import java.util.ArrayList;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;


/**
 * JPA entity class for "Profile"
 *
 * @author VEOLIA
 *
 */
@Entity
@Table(name="profile", schema="nomad" )
@JsonIgnoreProperties(ignoreUnknown = true)
public class Profile implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY ---\\
        @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="id", nullable=false)
private Long id;

    //--- ENTITY DATA FIELDS ---\\
    @Column(name="prf_code", nullable=false, length=2147483647)
    @JsonProperty("prf_code")
    private String prfCode;

    @Column(name="prf_slabel", nullable=false, length=2147483647)
    @JsonProperty("prf_slabel")
    private String prfSlabel;

    @Column(name="prf_llabel", length=2147483647)
    @JsonProperty("prf_llabel")
    private String prfLlabel;

    @Column(name="prf_valid")
    @JsonProperty("prf_valid")
    private Boolean prfValid;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="prf_dcre")
    @CreationTimestamp
    @JsonProperty("prf_dcre")
    private Date prfDcre;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="prf_dmod")
    @UpdateTimestamp
    @JsonProperty("prf_dmod")
    private Date prfDmod;


    //--- ENTITY LINKS ( RELATIONSHIP ) ---\\
    @ManyToOne
    @JoinColumn(name="prf_ucre_id", referencedColumnName="id")
	@JsonIgnore
    private Users createdBy;

    @OneToMany(mappedBy="profile")
    private List<PrfPer> listOfPrfPer;

    @OneToMany(mappedBy="profile")
    private List<UsrCtrPrf> listOfUsrCtrPrf;

    @ManyToOne
    @JoinColumn(name="prf_umod_id", referencedColumnName="id")
	@JsonIgnore
    private Users modifiedBy;

    /**
     * Constructor
     */
    public Profile() {
		super();
    }
    
    //--- GETTERS & SETTERS FOR FIELDS ---\\
    public Long getId() {
        return this.id;
    }

    public void setId( Long id ) {
        this.id = id ;
    }

    public String getPrfCode() {
        return this.prfCode;
    }

	public void setPrfCode( String prfCode ) {
        this.prfCode = prfCode ;
    }

    public String getPrfSlabel() {
        return this.prfSlabel;
    }

	public void setPrfSlabel( String prfSlabel ) {
        this.prfSlabel = prfSlabel ;
    }

    public String getPrfLlabel() {
        return this.prfLlabel;
    }

	public void setPrfLlabel( String prfLlabel ) {
        this.prfLlabel = prfLlabel ;
    }

    public Boolean getPrfValid() {
        return this.prfValid;
    }

	public void setPrfValid( Boolean prfValid ) {
        this.prfValid = prfValid ;
    }

    public Date getPrfDcre() {
        return this.prfDcre;
    }

	public void setPrfDcre( Date prfDcre ) {
        this.prfDcre = prfDcre ;
    }

    public Date getPrfDmod() {
        return this.prfDmod;
    }

	public void setPrfDmod( Date prfDmod ) {
        this.prfDmod = prfDmod ;
    }

    //--- GETTERS AND SETTERS FOR LINKS ---\\
    public Users getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(Users createdBy) {
        this.createdBy = createdBy;
    }

    public List<PrfPer> getListOfPrfPer() {
        return this.listOfPrfPer;
    }

    public void setListOfPrfPer(List<PrfPer> listOfPrfPer) {
        this.listOfPrfPer = listOfPrfPer;
    }

    public List<UsrCtrPrf> getListOfUsrCtrPrf() {
        if (this.listOfUsrCtrPrf != null) {
            return this.listOfUsrCtrPrf.stream()
                .filter(e -> e.getDeletedAt() == null)
                .collect(Collectors.toList());
        } else {
            return new ArrayList<>();
        }
    }

    public List<UsrCtrPrf> getListOfUsrCtrPrfWithDeleted() {
        return this.listOfUsrCtrPrf;
    }

    public void setListOfUsrCtrPrf(List<UsrCtrPrf> listOfUsrCtrPrf) {
        this.listOfUsrCtrPrf = listOfUsrCtrPrf;
    }

    public Users getModifiedBy() {
        return this.modifiedBy;
    }

    public void setModifiedBy(Users modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

}
