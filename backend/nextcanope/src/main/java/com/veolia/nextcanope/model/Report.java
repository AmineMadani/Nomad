/*
 * Generated by TelosysTools with the custom VEOLIA template
 */
package com.veolia.nextcanope.model;

import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.Date;
import jakarta.persistence.*;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.hibernate.annotations.UpdateTimestamp;
import org.hibernate.annotations.CreationTimestamp;


/**
 * JPA entity class for "Report"
 *
 * @author VEOLIA
 *
 */
@Entity
@Table(name="report", schema="nomad" )
@JsonIgnoreProperties(ignoreUnknown = true)
public class Report implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY ---\\
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="id", nullable=false)
    private Long id;

    //--- ENTITY DATA FIELDS ---\\
    @Column(name="rpt_key", length=2147483647)
    @JsonProperty("rpt_key")
    private String rptKey;

    @Column(name="rpt_label", length=2147483647)
    @JsonProperty("rpt_label")
    private String rptLabel;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="rpt_dcre")
    @CreationTimestamp
    @JsonProperty("rpt_dcre")
    private Date rptDcre;

    @Column(name="rpt_value", length=2147483647)
    @JsonProperty("rpt_value")
    private String rptValue;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="rpt_dmod")
    @UpdateTimestamp
    @JsonProperty("rpt_dmod")
    private Date rptDmod;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="rpt_ddel")
    @JsonProperty("rpt_ddel")
    private Date deletedAt;


    //--- ENTITY LINKS ( RELATIONSHIP ) ---\\
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="rpt_umod_id", referencedColumnName="id")
	@JsonIgnore
    private Users modifiedBy;

    @ManyToOne
    @JoinColumn(name="tsk_id", referencedColumnName="id")
    private Task task;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="rpt_ucre_id", referencedColumnName="id")
	@JsonIgnore
    private Users createdBy;

    /**
     * Constructor
     */
    public Report() {
		super();
    }
    
    //--- GETTERS & SETTERS FOR FIELDS ---\\
    public Long getId() {
        return this.id;
    }

    public void setId( Long id ) {
        this.id = id ;
    }

    public String getRptKey() {
        return this.rptKey;
    }

	public void setRptKey( String rptKey ) {
        this.rptKey = rptKey ;
    }

    public String getRptLabel() {
        return this.rptLabel;
    }

	public void setRptLabel( String rptLabel ) {
        this.rptLabel = rptLabel ;
    }

    public Date getRptDcre() {
        return this.rptDcre;
    }

	public void setRptDcre( Date rptDcre ) {
        this.rptDcre = rptDcre ;
    }

    public String getRptValue() {
        return this.rptValue;
    }

	public void setRptValue( String rptValue ) {
        this.rptValue = rptValue ;
    }

    public Date getRptDmod() {
        return this.rptDmod;
    }

	public void setRptDmod( Date rptDmod ) {
        this.rptDmod = rptDmod ;
    }

    public Date getDeletedAt() {
        return deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    public void markAsDeleted(Users user) {
        this.deletedAt = new Date();
        this.modifiedBy = user;
    }

    //--- GETTERS AND SETTERS FOR LINKS ---\\
    public Users getModifiedBy() {
        return this.modifiedBy;
    }

    public void setModifiedBy(Users modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    public Task getTask() {
        return this.task;
    }

    public void setTask(Task task) {
        this.task = task;
    }

    public Users getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(Users createdBy) {
        this.createdBy = createdBy;
    }

}
