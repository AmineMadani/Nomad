import { Component, OnInit } from '@angular/core';
import { Itv } from 'src/app/core/models/itv.model';
import { FilterService } from 'src/app/core/services/filter.service';
import { ItvService } from 'src/app/core/services/itv.service';

@Component({
  selector: 'app-itv-list',
  templateUrl: './itv-list.component.html',
  styleUrls: ['./itv-list.component.scss'],
})
export class ItvListComponent implements OnInit {
  constructor(
    private itvService: ItvService,
    private filterService: FilterService,
  ) {}

  private searchForm: any;

  public itvs: Itv[];

  public isDisplayLastTasks: boolean;
  public isDisplayFailures: boolean;

  public loading: boolean;
  public isImport: boolean = false;

  private limit: number = 20;
  private offset: number = 0;

  ngOnInit(): void {
    this.searchForm = this.filterService.getFilterForm() ?? {};
    this.filterITV(this.searchForm);
  }

  public onDisplayLastITVs(event): void {}

  public onDisplayFailures(event): void {}

  public filterITV(searchForm: any): void {
    this.itvs = [];
    this.limit = 20;
    this.offset = 0;
    this.searchForm = searchForm;
    this.filterService.setFilterForm(searchForm);

    if (!this.loading) {
      this.loading = true;
      this.itvService
        .getItvsPaginated(this.limit, this.offset, this.filterService.transformFilterItv())
        .then((itvs) => {
          this.itvs = itvs;
          this.loading = false;
        });
    }
  }

  public switchToImport(): void {
    this.isImport = true;
  }

  public onImportItvFinished(): void {
    this.isImport = true;
    // TODO - Reload list ?
  }

  public onIonInfinite(ev): void {
    this.offset = this.limit;
    this.limit += 20;
    this.itvService
      .getItvsPaginated(this.limit, this.offset, this.filterService.transformFilterItv())
      .then((itvs: Itv[]) => {
        this.itvs = [...this.itvs, ...itvs];
        ev.target.complete();
      });
  }

  public async onDeleteItv(itvId: number) {
    await this.itvService.deleteItv(itvId);
    this.itvs = this.itvs.filter((itv) => itv.id !== itvId);
  }

  public onCustomScrollBarStyle(): string {
    return `
    ::-webkit-scrollbar {
      width: 4px;
    }
    ::-webkit-scrollbar-track {
      background: var(--ion-color-neutral-variant-80);
    }
    ::-webkit-scrollbar-thumb {
      background: var(--ion-color-neutral-variant-30);
    }
    ::-webkit-scrollbar-thumb:hover {
      background: var(--ion-color-neutral-variant-50);
    }`;
  }
}
